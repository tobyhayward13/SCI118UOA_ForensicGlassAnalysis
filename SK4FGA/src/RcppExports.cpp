// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// meanC
double meanC(NumericVector x);
RcppExport SEXP _SK4FGA_meanC(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(meanC(x));
    return rcpp_result_gen;
END_RCPP
}
// helloworld
int helloworld();
RcppExport SEXP _SK4FGA_helloworld() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(helloworld());
    return rcpp_result_gen;
END_RCPP
}
// sumofsquares
double sumofsquares(NumericVector x);
RcppExport SEXP _SK4FGA_sumofsquares(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(sumofsquares(x));
    return rcpp_result_gen;
END_RCPP
}
// find_B0_C
List find_B0_C(std::vector<double> arr);
RcppExport SEXP _SK4FGA_find_B0_C(SEXP arrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type arr(arrSEXP);
    rcpp_result_gen = Rcpp::wrap(find_B0_C(arr));
    return rcpp_result_gen;
END_RCPP
}
// vecMean
double vecMean(std::vector<double> vec);
RcppExport SEXP _SK4FGA_vecMean(SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type vec(vecSEXP);
    rcpp_result_gen = Rcpp::wrap(vecMean(vec));
    return rcpp_result_gen;
END_RCPP
}
// whichMax
int whichMax(std::vector<double> vec);
RcppExport SEXP _SK4FGA_whichMax(SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type vec(vecSEXP);
    rcpp_result_gen = Rcpp::wrap(whichMax(vec));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SK4FGA_meanC", (DL_FUNC) &_SK4FGA_meanC, 1},
    {"_SK4FGA_helloworld", (DL_FUNC) &_SK4FGA_helloworld, 0},
    {"_SK4FGA_sumofsquares", (DL_FUNC) &_SK4FGA_sumofsquares, 1},
    {"_SK4FGA_find_B0_C", (DL_FUNC) &_SK4FGA_find_B0_C, 1},
    {"_SK4FGA_vecMean", (DL_FUNC) &_SK4FGA_vecMean, 1},
    {"_SK4FGA_whichMax", (DL_FUNC) &_SK4FGA_whichMax, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_SK4FGA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
